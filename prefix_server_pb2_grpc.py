# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import prefix_server_pb2 as prefix__server__pb2


class PublicStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PrefixSearch = channel.unary_stream(
        '/models.Public/PrefixSearch',
        request_serializer=prefix__server__pb2.SearchParams.SerializeToString,
        response_deserializer=prefix__server__pb2.Item.FromString,
        )


class PublicServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PrefixSearch(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PublicServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PrefixSearch': grpc.unary_stream_rpc_method_handler(
          servicer.PrefixSearch,
          request_deserializer=prefix__server__pb2.SearchParams.FromString,
          response_serializer=prefix__server__pb2.Item.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'models.Public', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))


class PrivateStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Scrape = channel.unary_unary(
        '/models.Private/Scrape',
        request_serializer=prefix__server__pb2.BlockInterval.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Status = channel.unary_unary(
        '/models.Private/Status',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=prefix__server__pb2.ServerStatus.FromString,
        )


class PrivateServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Scrape(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Status(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_PrivateServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Scrape': grpc.unary_unary_rpc_method_handler(
          servicer.Scrape,
          request_deserializer=prefix__server__pb2.BlockInterval.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Status': grpc.unary_unary_rpc_method_handler(
          servicer.Status,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=prefix__server__pb2.ServerStatus.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'models.Private', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
